services:
  ak0_2:
    container_name: ak0_2_web
    image: ak0_2
    ports:
      - 8200:8200
    environment:
      - OTEL_RESOURCE_ATTRIBUTES="service.name=ak0_2,service.version=0.0.1"
    depends_on: 
      prometheus:
        condition: service_healthy
    networks:
      - default-network

  otelcol:
    container_name: otelcol
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - default-network
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus_ak0_2
    command: --config.file=/etc/prometheus/prometheus.yml --web.enable-otlp-receiver
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - default-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 20s

networks:
  default-network:
    driver: bridge
